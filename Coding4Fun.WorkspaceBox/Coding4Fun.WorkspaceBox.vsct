<?xml version="1.0" encoding="utf-8"?>
<CommandTable xmlns="http://schemas.microsoft.com/VisualStudio/2005-10-18/CommandTable" xmlns:xs="http://www.w3.org/2001/XMLSchema">

	<!--  This is the file that defines the actual layout and type of the commands.
		It is divided in different sections (e.g. command definition, command
		placement, ...), with each defining a specific set of properties.
		See the comment before each section for more details about how to
		use it. -->

	<!--  The VSCT compiler (the tool that translates this file into the binary 
		format that VisualStudio will consume) has the ability to run a preprocessor 
		on the vsct file; this preprocessor is (usually) the C++ preprocessor, so 
		it is possible to define includes and macros with the same syntax used 
		in C++ files. Using this ability of the compiler here, we include some files 
		defining some of the constants that we will use inside the file. -->

	<!--This is the file that defines the IDs for all the commands exposed by VisualStudio. -->
	<Extern href="stdidcmd.h"/>

	<!--This header contains the command ids for the menus provided by the shell. -->
	<Extern href="vsshlids.h"/>

	<!--The Commands section is where we the commands, menus and menu groups are defined.
	  This section uses a Guid to identify the package that provides the command defined inside it. -->
	<Commands package="guidCoding4Fun_WorkspaceBoxPkg">
		<!-- Inside this section we have different sub-sections: one for the menus, another  
	for the menu groups, one for the buttons (the actual commands), one for the combos 
	and the last one for the bitmaps used. Each element is identified by a command id that  
	is a unique pair of guid and numeric identifier; the guid part of the identifier is usually  
	called "command set" and is used to group different command inside a logically related  
	group; your package should define its own command set in order to avoid collisions  
	with command ids defined by other packages. -->

		<Menus>
			<Menu guid="guidCoding4Fun_WorkspaceBoxCmdSet" id="Toolbar" type="Toolbar" >
				<CommandFlag>TextChanges</CommandFlag>
				<Strings>
					<ButtonText>Coding4Fun</ButtonText>
					<CommandName>Coding4Fun</CommandName>
				</Strings>
			</Menu>
			<Menu guid="guidCoding4Fun_WorkspaceBoxCmdSet" id="WorkspaceBoxMenu" type="MenuController" >
				<Parent guid="guidCoding4Fun_WorkspaceBoxCmdSet" id="ToolbarGroup" />
				<CommandFlag>DefaultInvisible</CommandFlag>
				<CommandFlag>DynamicVisibility</CommandFlag>
				<CommandFlag>TextIsAnchorCommand</CommandFlag>
				<Strings>
					<ButtonText></ButtonText>
					<CommandName>WorkspaceBoxMenu</CommandName>
				</Strings>
			</Menu>
		</Menus>

		<!-- In this section you can define new menu groups. A menu group is a container for 
		 other menus or buttons (commands); from a visual point of view you can see the 
		 group as the part of a menu contained between two lines. The parent of a group 
		 must be a menu. -->
		<Groups>
			<Group guid="guidCoding4Fun_WorkspaceBoxCmdSet" id="ToolbarGroup" priority="0x0000">
				<Parent guid="guidCoding4Fun_WorkspaceBoxCmdSet" id="Toolbar"/>
			</Group>
			<Group guid="guidCoding4Fun_WorkspaceBoxCmdSet" id="WorkspaceBoxGroup" priority="0x0001">
				<Parent guid="guidCoding4Fun_WorkspaceBoxCmdSet" id="WorkspaceBoxMenu"/>
			</Group>
		</Groups>

		<!--Buttons section. -->
		<!--This section defines the elements the user can interact with, like a menu command or a button 
		or combo box in a toolbar. -->
		<Buttons>
			<!--To define a menu group you have to specify its ID, the parent menu and its display priority. 
		  The command is visible and enabled by default. If you need to change the visibility, status, etc, you can use
		  the CommandFlag node.
		  You can add more than one CommandFlag node e.g.:
			  <CommandFlag>DefaultInvisible</CommandFlag>
			  <CommandFlag>DynamicVisibility</CommandFlag>
		  If you do not want an image next to your command, remove the Icon node /> -->

			<Button guid="guidCoding4Fun_WorkspaceBoxCmdSet" id="cmdidWorkspaceListCmd" type="Button">
				<Parent guid="guidCoding4Fun_WorkspaceBoxCmdSet" id="WorkspaceBoxGroup" />
				<CommandFlag>TextOnly</CommandFlag>
				<CommandFlag>TextChanges</CommandFlag>
				<CommandFlag>DefaultInvisible</CommandFlag>
				<CommandFlag>DynamicVisibility</CommandFlag>
				<CommandFlag>DynamicItemStart</CommandFlag>
				<Strings>
					<ButtonText>Workspace...</ButtonText>
					<CommandName>cmdidWorkspaceListCmd</CommandName>
				</Strings>
			</Button>
		</Buttons>

	</Commands>
	<VisibilityConstraints>
		<VisibilityItem guid="guidCoding4Fun_WorkspaceBoxCmdSet" id="cmdidWorkspaceListCmd" context="UICONTEXT_SolutionExists"/>
	</VisibilityConstraints>

	<Symbols>
		<!-- This is the package guid. -->
		<GuidSymbol name="guidCoding4Fun_WorkspaceBoxPkg" value="{593fa676-e509-443f-b1de-2237d5f7e545}" />

		<!-- This is the guid used to group the menu commands together -->
		<GuidSymbol name="guidCoding4Fun_WorkspaceBoxCmdSet" value="{458389fd-2202-4e28-9113-d4cb39de5a11}">
			<IDSymbol name="cmdidWorkspaceListCmd" value="0x0100" />
			<IDSymbol name="Toolbar" value="0x1000" />
			<IDSymbol name="ToolbarGroup" value="0x1050" />
			<IDSymbol name="WorkspaceBoxMenu" value="0x0101" />
			<IDSymbol name="WorkspaceBoxGroup" value="0x1051" />
		</GuidSymbol>
	</Symbols>

</CommandTable>
